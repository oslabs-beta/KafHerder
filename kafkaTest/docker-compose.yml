version: '2'

services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  zookeeper-2:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 32181:2181

  kafka-1:
    # image: confluentinc/cp-kafka:latest
    build: . # instead of image, this is saying build the image using the dockerfile in the same directory as this file
    depends_on:
      - zookeeper-1
      - zookeeper-2
    ports:
      - "29092:29092"
      - "8686:8686"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_JMX_PORT: 9292 # this key-value pair cause binding issues with the port if changed to 8686
      KAFKA_JMX_HOSTNAME: localhost # needs to be uncommented for prometheus to see the status, otherwise it marks it us unknown
      JAVA_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=8686 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false
      KAFKA_OPTS: -javaagent:/usr/app/jmx_prometheus_javaagent-0.20.0.jar=8686:/usr/app/jmx_exporter_config.yml
  kafka-2:
    build: . # instead of image, this is saying build the image using the dockerfile in the same directory as this file
    # image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-1
      - zookeeper-2
    ports:
      - "39092:39092"
      - "8687:8686"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,PLAINTEXT_HOST://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_JMX_PORT: 33992
      KAFKA_JMX_HOSTNAME: localhost
      JAVA_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=8687 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false
      KAFKA_OPTS: -javaagent:/usr/app/jmx_prometheus_javaagent-0.20.0.jar=8686:/usr/app/jmx_exporter_config.yml


  # version: '3'

  # services:
  #   zookeeper:
  #     image: wurstmeister/zookeeper
  #     container_name: zookeeper
  #     ports:
  #       - "2181:2181"

  #   kafka1:
  #     build: . # instead of image, this is saying build the image using the dockerfile in the same directory as this file
  #     container_name: kafka1
  #     ports:
  #       - "9092:9092" # Map port 9092 in the container to port 9092 on the host
  #       - "9992:9992" # Map port 9992 in the container to port 9992 on the host for the JMX
  #     depends_on:
  #     - zookeeper
  #     environment:
  #       KAFKA_BROKER_ID: 1
  #       # KAFKA_ADVERTISED_HOST_NAME: localhost
  #       KAFKA_LISTENERS: EXTERNAL_LISTENER://0.0.0.0:9092,INTERNAL_LISTENER://0.0.0.0:29092      
  #       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL_LISTENER:PLAINTEXT, INTERNAL_LISTENER:PLAINTEXT
  #       KAFKA_ADVERTISED_LISTENERS: EXTERNAL_LISTENER://localhost:9092, INTERNAL_LISTENER://kafka1:29092
  #       KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL_LISTENER
  #       # KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #       # CONFLUENT_TOPIC_REPLICATION_FACTOR: 1
  #       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #       KAFKA_JMX_PORT: 9992
  #       KAFKA_JMX_HOSTNAME: localhost
  #       KAFKA_OPTS: -javaagent:/usr/app/jmx_prometheus_javaagent-0.20.0.jar=9992:/usr/app/jmx_exporter_config.yml

  #   kafka2:
  #     build: . # instead of image, this is saying build the image using the dockerfile in the same directory as this file
  #     container_name: kafka2
  #     ports:
  #       - "9093:9092" # Map port 9092 in the container to port 9092 on the host
  #       - "9993:9992" # Map port 9992 in the container to port 9992 on the host for the JMX
  #     depends_on:
  #     - zookeeper
  #     environment:
  #       KAFKA_BROKER_ID: 2
  #       # KAFKA_ADVERTISED_HOST_NAME: localhost
  #       KAFKA_LISTENERS: EXTERNAL_LISTENER://0.0.0.0:9093,INTERNAL_LISTENER://0.0.0.0:29092      
  #       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL_LISTENER:PLAINTEXT, INTERNAL_LISTENER:PLAINTEXT
  #       KAFKA_ADVERTISED_LISTENERS: EXTERNAL_LISTENER://localhost:9093, INTERNAL_LISTENER://kafka2:29092
  #       KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL_LISTENER
  #       # KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #       # CONFLUENT_TOPIC_REPLICATION_FACTOR: 1
  #       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #       KAFKA_JMX_PORT: 9992
  #       KAFKA_JMX_HOSTNAME: localhost
  #       KAFKA_OPTS: -javaagent:/usr/app/jmx_prometheus_javaagent-0.20.0.jar=9992:/usr/app/jmx_exporter_config.yml

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
